n = 122176702587666222656178997306731800315470313059945484356045257042705559830013657538331816145529429726151793155958841047018561457555987730110440277108141326199691362293314424082813461080279740645015286947964248952299406909198742180493424343261367022537985375818956994585644741915127081479325596597482215803401
p = 10302475642106667177286174748379179203110671979783566041907614920791357491512205961496124805452935203805051483877828293835774330775237173299325065631516939
q = 11858965440143795322466491082119654504218218642276288953853315090812579942296516429157455703708355748055835417307120060031300874961948972467551321543536059
e = 65537
enc = 87815546076588618625541560350417770089532632825977918029330610242087257411093643525039325177638300816853764504706021259937697220315137936205519768037826354458722904344896564975662243025145035289336915227143767336519280796290681474773611880512977171856849316412054226076644208436394552152773159004969353718134

from Crypto.Util.number import long_to_bytes,inverse

phi = (p-1)*(q-1)
d = inverse(e,phi)
print(long_to_bytes(pow(enc,d,n)).decode())